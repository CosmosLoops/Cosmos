<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Logging.Extensions.Exceptions.PostgreSql</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Logging.DestructurerExtensions">
            <summary>
            Extensions for destructurer
            </summary>
        </member>
        <member name="M:Cosmos.Logging.DestructurerExtensions.UsePostgreSql(Cosmos.Logging.Extensions.Exceptions.Configurations.ExceptionOptions)">
            <summary>
            Use Postgres
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Logging.Extensions.Exceptions.Destructurers.NpgsqlExceptionDestructurer">
            <summary>
            Npgsql exception destructurer
            </summary>
        </member>
        <member name="M:Cosmos.Logging.Extensions.Exceptions.Destructurers.NpgsqlExceptionDestructurer.DestructureException(Npgsql.NpgsqlException,Cosmos.Logging.Extensions.Exceptions.Core.IExceptionPropertyBag,System.Func{System.Exception,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}})">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Logging.Extensions.Exceptions.Destructurers.PostgresExceptionDestructurer">
            <summary>
            Postgres exception destructurer
            </summary>
        </member>
        <member name="M:Cosmos.Logging.Extensions.Exceptions.Destructurers.PostgresExceptionDestructurer.DestructureException(Npgsql.PostgresException,Cosmos.Logging.Extensions.Exceptions.Core.IExceptionPropertyBag,System.Func{System.Exception,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}})">
            <inheritdoc />
        </member>
    </members>
</doc>
