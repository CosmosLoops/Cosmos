<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Logging.RunsOn.AspNet</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Logging.AspNetMvcExtensions">
            <summary>
            Extensions for ASP.NET MVC
            </summary>
        </member>
        <member name="M:Cosmos.Logging.AspNetMvcExtensions.RegisterCosmosLogging(System.Web.HttpApplication,System.Action{Cosmos.Logging.Core.ILogServiceCollection})">
            <summary>
            Register Cosmos Logging
            </summary>
            <param name="application"></param>
            <param name="config"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Logging.AspNetMvcExtensions.RegisterOnError(System.Web.HttpApplication)">
            <summary>
            Register on error
            </summary>
            <param name="application"></param>
        </member>
        <member name="M:Cosmos.Logging.AspNetMvcExtensions.RegisterOnBegin(System.Web.HttpApplication)">
            <summary>
            Register on begin
            </summary>
            <param name="application"></param>
        </member>
        <member name="M:Cosmos.Logging.AspNetMvcExtensions.RegisterOnEnd(System.Web.HttpApplication)">
            <summary>
            Register on end
            </summary>
            <param name="application"></param>
        </member>
        <member name="T:Cosmos.Logging.GlobalOptionsExtensions">
            <summary>
            Global options extensions
            </summary>
        </member>
        <member name="M:Cosmos.Logging.GlobalOptionsExtensions.ToGlobal(Cosmos.Logging.Core.ILogServiceCollection,System.Action{Cosmos.Logging.Configurations.LoggingOptions})">
            <summary>
            To global
            </summary>
            <param name="services"></param>
            <param name="settingsAct"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.GlobalOptionsExtensions.ToGlobal``1(Cosmos.Logging.Core.ILogServiceCollection,System.Action{``0})">
            <summary>
            To global
            </summary>
            <param name="services"></param>
            <param name="settingsAct"></param>
            <typeparam name="TLoggingSettings"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.GlobalOptionsExtensions.ToGlobal``1(Cosmos.Logging.Core.ILogServiceCollection,``0)">
            <summary>
            To global
            </summary>
            <param name="services"></param>
            <param name="settings"></param>
            <typeparam name="TLoggingSettings"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Logging.LOGGER">
            <summary>
            Logger
            </summary>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger(System.String,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="categoryName"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger(System.String,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="categoryName"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger(System.String,Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="categoryName"></param>
            <param name="minLevel"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger(System.String,Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="categoryName"></param>
            <param name="minLevel"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger(System.Type,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="type"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger(System.Type,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="type"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger(System.Type,Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="type"></param>
            <param name="minLevel"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger(System.Type,Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="type"></param>
            <param name="minLevel"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger``1(Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger``1(System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger``1(Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="minLevel"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetLogger``1(Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <summary>
            Get logger
            </summary>
            <param name="minLevel"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger(System.String,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="categoryName"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger(System.String,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="categoryName"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger(System.String,Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="categoryName"></param>
            <param name="minLevel"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger(System.String,Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="categoryName"></param>
            <param name="minLevel"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger(System.Type,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="type"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger(System.Type,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="type"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger(System.Type,Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="type"></param>
            <param name="minLevel"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger(System.Type,Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="type"></param>
            <param name="minLevel"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger``1(Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger``1(System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger``1(Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="minLevel"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Logging.LOGGER.GetFutureLogger``1(Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <summary>
            Gets future logger
            </summary>
            <param name="minLevel"></param>
            <param name="filter"></param>
            <param name="mode"></param>
            <param name="renderingOptions"></param>
            <param name="memberName"></param>
            <param name="filePath"></param>
            <param name="lineNumber"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Logging.RunsOn.AspNet.AspNetFutureLogger">
            <summary>
            ASP.NET Future logger
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetFutureLogger.#ctor(Cosmos.Logging.ILogger,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Logging.RunsOn.AspNet.AspNetLogger">
            <summary>
            ASP.NET Logger
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLogger.#ctor(System.Type,Cosmos.Logging.Events.LogEventLevel,System.String,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration,Cosmos.Logging.Core.Payloads.ILogPayloadSender,System.Web.HttpContext)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Logging.RunsOn.AspNet.AspNetLogger.HttpContext">
            <summary>
            Gets HttpContext
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLogger.ToFuture(System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLogger.ToSimple">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider">
            <summary>
            ASP.NET Logging Service Provider
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.#ctor(System.Collections.Generic.IEnumerable{Cosmos.Logging.Core.Payloads.ILogPayloadClientProvider},Cosmos.Logging.LoggingConfiguration)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider"/>.
            </summary>
            <param name="logPayloadClientProviders"></param>
            <param name="loggingConfiguration"></param>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger(System.String,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger(System.String,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger(System.String,Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger(System.String,Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger(System.Type,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger(System.Type,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger(System.Type,Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger(System.Type,Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger``1(Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger``1(System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger``1(Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetLogger``1(Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Events.LogEventSendMode,Cosmos.Logging.Configurations.RenderingConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetSimpleLogger(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetSimpleLogger``1">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger(System.String,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger(System.String,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger(System.String,Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger(System.String,Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger(System.Type,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger(System.Type,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger(System.Type,Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger(System.Type,Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger``1(Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger``1(System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger``1(Cosmos.Logging.Events.LogEventLevel,Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetLoggingServiceProvider.GetFutureLogger``1(Cosmos.Logging.Events.LogEventLevel,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Configurations.RenderingConfiguration,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Logging.RunsOn.AspNet.AspNetSimpleLogger">
            <summary>
            ASP.NET simple Logger
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.AspNetSimpleLogger.#ctor(System.Type,Cosmos.Logging.Events.LogEventLevel,System.String,System.Func{System.String,Cosmos.Logging.Events.LogEventLevel,System.Boolean},Cosmos.Logging.Core.Payloads.ILogPayloadSender)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection">
            <summary>
            Asp.Net logging service collection
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            ASP.NET Log service collection
            </summary>
            <param name="services"></param>
            <param name="builder"></param>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
            ASP.NET Log service collection
            </summary>
            <param name="services"></param>
            <param name="root"></param>
        </member>
        <member name="P:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.BeGivenConfigurationBuilder">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.BeGivenConfigurationRoot">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.ExposeServices">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.ExposeLogSettings">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.ExposeLoggingConfiguration">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.ReplaceSettings(Cosmos.Logging.Configurations.ILoggingOptions)">
            <summary>
            Replace settings
            </summary>
            <param name="newSettings"></param>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.AddDependency(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.AddEnricher(System.Func{Cosmos.Logging.Core.Enrichers.ILogEventEnricher})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.AddSinkSettings``2(``0,System.Action{Microsoft.Extensions.Configuration.IConfiguration,``1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.AddExtraSinkSettings``2(``0,System.Action{Microsoft.Extensions.Configuration.IConfiguration,``1,Cosmos.Logging.LoggingConfiguration})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.AddOriginalConfigAction(System.Action{Microsoft.Extensions.Configuration.IConfiguration})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.ModifyConfigurationBuilder(System.Action{Cosmos.Logging.Configurations.LoggingConfigurationBuilder})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.PreheatMessageTemplates(System.Action{Cosmos.Logging.MessageTemplates.MessageTemplateCachePreheater})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.BuildConfiguration">
            <summary>
            Build configuration
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.ActiveSinkSettings">
            <summary>
            Active sink settings
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.ActiveOriginConfiguration">
            <summary>
            Active original confguration
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.AspNetLogServiceCollection.ActiveLogEventEnrichers">
            <summary>
            Active LogEventEnrichers
            </summary>
        </member>
        <member name="T:Cosmos.Logging.RunsOn.AspNet.Core.Constants">
            <summary>
            Constants
            </summary>
        </member>
        <member name="F:Cosmos.Logging.RunsOn.AspNet.Core.Constants.AspNetMvcName">
            <summary>
            ASP.NET MVC name
            </summary>
        </member>
        <member name="F:Cosmos.Logging.RunsOn.AspNet.Core.Constants.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Cosmos.Logging.RunsOn.AspNet.Core.Constants.Null">
            <summary>
            Null
            </summary>
        </member>
        <member name="T:Cosmos.Logging.RunsOn.AspNet.Core.RenderActivation">
            <summary>
            Renderer activation
            </summary>
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.Core.RenderActivation.ActiveAspNetPreferencesRenderers(Cosmos.Logging.Core.ILogServiceCollection)">
            <summary>
            Active ASP.NET Preferences renderers
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Cosmos.Logging.RunsOn.AspNet.RendersLib.AspNetHelloWorldRenderer">
            <summary>
            AspNet Hello world
            </summary>
        </member>
        <member name="P:Cosmos.Logging.RunsOn.AspNet.RendersLib.AspNetHelloWorldRenderer.Name">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.RendersLib.AspNetHelloWorldRenderer.ToString(System.Collections.Generic.IList{Cosmos.Logging.Formattings.FormatEvent},System.String,Cosmos.Logging.Core.ILogEventInfo,System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.RendersLib.AspNetHelloWorldRenderer.ToString(System.Collections.Generic.IList{System.Func{System.Object,System.IFormatProvider,System.Object}},System.String,Cosmos.Logging.Core.ILogEventInfo,System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.RendersLib.AspNetHelloWorldRenderer.ToString(System.String,System.String,Cosmos.Logging.Core.ILogEventInfo,System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Logging.RunsOn.AspNet.RendersLib.AspNetHelloWorldRenderer.ToString">
            <inheritdoc />
        </member>
    </members>
</doc>
